name: Branch Protection Check

on:
  pull_request:
    branches:
      - main
      - staging
      - develop

jobs:
  documentation-check:
    name: Check Documentation Updates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if CHANGELOG updated
        id: changelog
        run: |
          # Verificar si hay cambios en código Python
          if git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(py)$'; then
            # Si hay cambios en código, verificar CHANGELOG
            if ! git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -q "CHANGELOG.md"; then
              echo "::error::Se detectaron cambios en código pero no en CHANGELOG.md"
              echo "changelog_updated=false" >> $GITHUB_OUTPUT
              exit 1
            else
              echo "changelog_updated=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changelog_updated=n/a" >> $GITHUB_OUTPUT
          fi

      - name: Check for broken markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "yes"
          config-file: ".github/markdown-link-check-config.json"

      - name: Lint Markdown files
        uses: nosborn/github-action-markdown-cli@v3.2.0
        with:
          files: "*.md docs/*.md"
          config_file: ".markdownlint.json"
          ignore_files: "node_modules/"

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy
          pip install -r requirements.txt

      - name: Run Black
        run: black --check .

      - name: Run isort
        run: isort --check-only .

      - name: Run Flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run MyPy
        run: mypy . --ignore-missing-imports || true

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pytest test_agentic.py -v
          pytest test_refactoring.py -v

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  pr-labeler:
    name: Auto Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Label PR
        uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
